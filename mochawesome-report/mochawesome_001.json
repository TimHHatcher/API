{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-04T21:33:26.944Z",
    "end": "2022-03-04T21:33:29.323Z",
    "duration": 2379,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d025472b-e3a1-4854-bb7b-17b7067f39b8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9381b42e-ecdb-4027-ac67-f38923298a37",
          "title": "API - Coaching Info",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Coaching Info 401 Response",
              "fullTitle": "API - Coaching Info Coaching Info 401 Response",
              "timedOut": null,
              "duration": 2362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@loginInfo').then(response => {\n  const decodedObject = JSON.parse(atob(response.body.signInResponsePayload));\n  const token = decodedObject.signInUserSession.idToken.jwtToken;\n  const salesforceId = decodedObject.signInUserSession.idToken.payload['custom:salesforceId'];\n  console.log(token);\n  console.log(salesforceId);\n  cy.request({\n    method: 'GET',\n    url: 'https://z8m0fpo6yl.execute-api.us-east-1.amazonaws.com/v1/member/FakeMember/coaching-info',\n    headers: {\n      brand: 'Pack Health',\n      authorization: 'Bearer ' + token\n    },\n    failOnStatusCode: false\n  }).as('coachingInfo');\n  cy.get('@coachingInfo').then(response => {\n    console.log(response);\n    expect(response.status).to.equal(401);\n    expect(response.body.message).to.equal('Unauthorized');\n  });\n});",
              "err": {},
              "uuid": "bd73a536-c0be-4ed7-8063-be7246cbd27c",
              "parentUUID": "9381b42e-ecdb-4027-ac67-f38923298a37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd73a536-c0be-4ed7-8063-be7246cbd27c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.0"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.0"
    }
  }
}